import pygame

pygame.init()
#Дисплей. Розмір дисплея
win = pygame.display.set_mode((500, 500))

#Заголовок до гри
pygame.display.set_caption("Cubes Game")

walkRight = [pygame.image.load('D:\Programming\Python\Test questions\eight_1.png'),
pygame.image.load('D:\Programming\Python\Test questions\eight_2.png'), pygame.image.load('D:\Programming\Python\Test questions\eight_3.png'),
pygame.image.load('D:\Programming\Python\Test questions\eight_4.png'), pygame.image.load('D:\Programming\Python\Test questions\eight_5.png'),
pygame.image.load('D:\Programming\Python\Test questions\eight_6.png')]

walkLeft = [pygame.image.load('D:\Programming\Python\Test questions\left_1.png'),
pygame.image.load('D:\Programming\Python\Test questions\left_2.png'), pygame.image.load('D:\Programming\Python\Test questions\left_3.png'),
pygame.image.load('D:\Programming\Python\Test questions\left_4.png'), pygame.image.load('D:\Programming\Python\Test questions\left_5.png'),
pygame.image.load('D:\Programming\Python\Test questions\left_6.png')]

bg = pygame.image.load('D:\Programming\Python\Test questions\sGround.jpg')
playerStand = pygame.image.load('D:\Programming\Python\Test questions\sFront.png')

clock = pygame.time.Clock()

x = 50
y = 410
width = 75
height = 95
speed = 15

isJump = False
jumpCount = 10

left = False
right = False
animCount = 0
lastMove = "right"


#1.self - (?, обовязковкий параметр) 2.x, y - (позиція снаряда) 3.radius - (радіус) 4.color - (колір) 5.facing
class ammo():
    def __init__(self, x, y, radius, color, facing):
        self.x = x
        self.y = y
        self.radius = radius
        self.color = color
        self.facing = facing
        self.vel = 8 * facing

    def draw(self, win):
        pygame.draw.circle(win, self.color, (self.x, self.y),
        self.radius)

def drawWindow():
    global animCount
    win.blit(bg, (0, 0))

    if animCount + 1 >= 30:
        animCount = 0

    if left:
        win.blit(walkLeft[animCount // 5], (x, y))
        animCount += 1
    elif right:
        win.blit(walkRight[animCount // 5], (x, y))
        animCount += 1
    else:
        win.blit(playerStand, (x, y))
        
        for bullet in bullets:
            bullet.draw(win)

    #win.blit(bg, (0, 0,))
    pygame.display.update()

#Відповідає за скорість персонажа
run = True
bullets = []
while run:
    clock.tick(30)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    for bullet in bullets:
        if bullet.x < 500 and bullet.x > 0:
            bullet.x += bullet.vel
        else:
            bullets.pop(bullets.index(bullet))
    
    keys = pygame.key.get_pressed()

    if keys[pygame.K_f]:
        if lastMove == "right":
            facing = 1
        else:
            facing = -1
        if len(bullets) < 10:
            bullets.append(ammo(round(x + width // 2), round(y + height // 2), 5, (255, 0, 0 ), facing))

    if keys[pygame.K_LEFT] and x > 5:
        x -= speed
        left = True
        right = False
        lastMove = "left"
    elif keys[pygame.K_RIGHT] and x < 500 - width - 5:
        x += speed
        left = False
        right = True
    else:
        left = False
        right = False
        animCount = 0
        lastMove = "right"

    if not(isJump):
        
        if keys[pygame.K_SPACE]:
            isJump = True
    else:
        if jumpCount >= -10:
            if jumpCount < 0:
                y +=(jumpCount ** 2) / 2    
            else:
                y -=(jumpCount ** 2) / 2
            jumpCount -= 1
        else:
            isJump = False
            jumpCount = 10

    drawWindow()

    #win.fill((0,0,0))
    #pygame.draw.rect(win, (0, 0, 255), (x, y, width, height))
    #pygame.display.update()
pygame.quit()
